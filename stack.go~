package main

import "fmt"

type Stack struct {
	top		*int
	elements	[]int
}

func (s *Stack) Pop() int {
	result := s.elements[len(s.elements) - 1]
	s.elements = s.elements[:len(s.elements) - 1]
	return result
}

func (s *Stack) Push(element int) {
	s.elements = append(s.elements, element)
}

func (s *Stack) Top() int {
	s.top = &s.elements[len(s.elements) - 1]
	return s.top
}

func main() {
	stack := Stack{}

	stack.Push(1)
	stack.Push(2)
	stack.Push(3)

	fmt.Println(stack)

	element := stack.Pop()
	fmt.Println(element)

	fmt.Println(stack)
}
